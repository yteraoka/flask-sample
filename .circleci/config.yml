orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-cli: circleci/aws-cli@3.2.0
version: 2.1
jobs:
  build_scan_push:
    # docker では dockle がうまく動かないので machine を使う
    machine:
      image: default
    steps:
      - checkout
      - run:
          name: Generate image tag
          command: |
            echo "export BRANCH_AND_COMMIT_ID=$(echo branch-${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:7} | sed 's/[^a-zA-Z0-9_]/-/g')" >> $BASH_ENV
            echo "export COMMIT_ID_TAG=commit-${CIRCLE_SHA1}" >> $BASH_ENV
      - aws-cli/install:
          override-installed: true
      - aws-ecr/build-image:
          repo: ${AWS_ECR_REPO_NAME}
          tag: ${BRANCH_AND_COMMIT_ID},commit-${CIRCLE_SHA1},latest
      - run:
          name: Install dockle
          command: |
            VERSION=$(
              curl --silent "https://api.github.com/repos/goodwithtech/dockle/releases/latest" | \
              grep '"tag_name":' | \
              sed -E 's/.*"v([^"]+)".*/\1/'
            )
            curl -sLO https://github.com/goodwithtech/dockle/releases/download/v${VERSION}/dockle_${VERSION}_Linux-64bit.tar.gz
            tar zxvf dockle_${VERSION}_Linux-64bit.tar.gz
            sudo mv dockle /usr/local/bin
      - run:
          name: Scan the image with dockle
          command: dockle --exit-code 1 --exit-level FATAL ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}:${COMMIT_ID_TAG}
      - run:
          name: Install trivy
          command: |
            VERSION=$(
                curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | \
                grep '"tag_name":' | \
                sed -E 's/.*"v([^"]+)".*/\1/'
            )
            curl -sLO https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
            tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
            sudo mv trivy /usr/local/bin
      - run:
          name: Scan image with trivy
          command: trivy image --ignore-unfixed --exit-code 1 --no-progress --severity HIGH,CRITICAL ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}:${COMMIT_ID_TAG}
      - aws-ecr/ecr-login
      - aws-ecr/push-image:
          repo: ${AWS_ECR_REPO_NAME}
          tag: ${BRANCH_AND_COMMIT_ID},${COMMIT_ID_TAG},latest

  tag_push:
    machine:
      image: default
    steps:
      - checkout
      - run:
          name: Generate image tag
          command: |
            echo "export COMMIT_ID_TAG=commit-${CIRCLE_SHA1}" >> $BASH_ENV
      - aws-cli/install:
          override-installed: true
      - aws-ecr/ecr-login
      - aws-ecr/build-image:
          repo: ${AWS_ECR_REPO_NAME}
          tag: ${COMMIT_ID_TAG}
          skip-when-tags-exist: true
      - run:
          name: Tag image
          command: |
            docker image tag ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}:${COMMIT_ID_TAG} ${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}:${CIRCLE_TAG}
      - aws-ecr/push-image:
          repo: ${AWS_ECR_REPO_NAME}
          tag: ${CIRCLE_TAG}

workflows:
  build:
    jobs:
      - build_scan_push:
          filters:
            tags:
              ignore: /.*/
      - tag_push:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
